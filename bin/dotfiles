#!/usr/bin/env bash

# This script is to be used for managing and interacting with my system and its
# configurations.
#
# For now, this script will be extremely simple to allow me to use the system
# as I build out a better model for managing it. Currently, it depends on
# GNU stow to symlink the configuration files into place.

# NOTE: Only supports differentiating configurations based on $OSTYPE and
#       nothing else, including user, profile, manifest, etc. It only symlinks
#       different files for Linux and macOS and does not support other
#       deployment methods like subrepositories, git bare, or copying.
#       Also does not support error handling for GNU Stow.

die() {
    printf 'error: %s\n' "$@" 1>&2
    exit 1
}

# Fail fast checks.
# shellcheck disable=SC2292
if [ -z "${BASH_VERSION:-}" ]; then
    die 'Bash is required to interpret the script.'
elif [[ -n "${POSIXLY_CORRECT+1}" ]]; then
    die 'Script must not run in POSIX mode. Please unset POSIXLY_CORRECT.'
fi

# Prevent script form being sourced to avoid function or builtin overrides.
(return 0 2> /dev/null) && die "dotfiles script cannot be sourced."

# Require minimum Bash version and "$HOME" environment variable to be set.
if [[ "${BASH_VERSINFO[0]}" -lt 3 ||
    ("${BASH_VERSINFO[0]}" -eq 3 &&
    "${BASH_VERSINFO[1]}" -lt 2) ]]; then
    die "Bash version 3.2+ is required, exiting."
elif [[ -z "${HOME:-}" ]]; then
    die "'\$HOME' directory is unset, exiting."
fi

function log::error() {
    printf 'dotfiles: %s: error: %s\n' "${FUNCNAME[1]}" "$*" 1>&2
}

function dotfiles::main() {
    # Parse arguments.
    if [[ "$#" -gt 0 ]]; then
        case "$1" in
            deploy)
                dotfiles::deploy
                ;;
            *)
                log::error "unrecognized command: '$1'"
                return 1
                ;;
        esac
    else
        log::error "no arguments provided"
        return 1
    fi
}

function dotfiles::deploy() {
    if ! builtin command -v -- stow > /dev/null 2>&1; then
        log::error "dotfiles requires GNU Stow for deployment, exiting"
        return 1
    fi

    case "$OSTYPE" in
        darwin*)
            stow -v -d ~/.dotfiles/ -t ~/ -R home \
                --ignore='.xsession' \
                --ignore='.config/systemd' \
                --ignore='.config/rofi' \
                --ignore='.config/polybar' \
                --ignore='.config/picom' \
                --ignore='.config/nitrogen' \
                --ignore='.config/i3' \
                --ignore='.config/dunst' \
                --ignore='.config/deskflow' \
                --ignore='.config/emacs'
            ;;
        linux-gnu*)
            stow -v -d ~/.dotfiles/ -t ~/ -R home \
                --ignore='.config/skhd' \
                --ignore='.config/emacs'
            ;;
        *)
            log::error "unrecognized operating system: $OSTYPE"
            return 1
            ;;
    esac
}

dotfiles::main "$@"; exit "$?"
