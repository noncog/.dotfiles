#+title: i3 Window Manager
#+startup: show3levels
#+export_exclude_tags: exclude noexport

[[https://i3wm.org/][i3]] is an open source tiling window manager for X11.

My configuration is generated dynamically (tangled) from this Emacs org-mode file.

This allows me to write the configuration non-linearly and to have comments and settings placed where they need to be dynamically upon generation.

I use this to create a mode called "Emacs" mode that is automatically activated by the Perl script =./i3-emacs-mode.pl= whenever I focus an Emacs window. This allows me to integrate the i3 window management keybinds with Emacs' keybinds. Or, in general to have control over my keybinds per actively focused window. The Perl script is executed by SystemD which I use to orchestrate the execution of my graphical environment, including starting the X server, i3, the i3-emacs-mode.pl script, etc. This allows for the coordination of services without using Bash scripts or IPC, and more.

* Table of Contents :TOC:QUOTE:
#+BEGIN_QUOTE
- [[#behavior][Behavior]]
  - [[#focus][Focus]]
  - [[#gaps][Gaps]]
  - [[#borders][Borders]]
  - [[#layout][Layout]]
- [[#appearance][Appearance]]
  - [[#font][Font]]
  - [[#theme][Theme]]
  - [[#gaps-1][Gaps]]
  - [[#borders-1][Borders]]
- [[#keybinds][Keybinds]]
  - [[#modifiers][Modifiers]]
  - [[#directional-keys][Directional Keys]]
  - [[#focus-windows][Focus Windows]]
  - [[#move-windows][Move Windows]]
  - [[#focus-workspace][Focus Workspace]]
  - [[#move-to-workspace][Move to Workspace]]
  - [[#split-windows][Split Windows]]
  - [[#kill-windows][Kill Windows]]
  - [[#toggle-container-layout][Toggle Container Layout]]
  - [[#floating-window-controls][Floating Window Controls]]
  - [[#toggle-fullscreen][Toggle Fullscreen]]
  - [[#volume-controls][Volume Controls]]
- [[#programs][Programs]]
  - [[#emacs][Emacs]]
  - [[#brave][Brave]]
  - [[#kitty][Kitty]]
  - [[#discord][Discord]]
  - [[#spotify][Spotify]]
  - [[#rofi][Rofi]]
  - [[#nitrogen][Nitrogen]]
- [[#tips][Tips]]
  - [[#finding-information][Finding Information]]
  - [[#terms][Terms]]
#+END_QUOTE

* Setup :noexport:
** Config

Build the config file.

#+begin_src conf :tangle config :noweb yes :exports none
# i3 window manager configuration dynamically generated (tangled) from ./i3.org.

<<settings>>

<<variables>>

<<keybinds>>

<<applications>>

<<startup>>

<<modes>>
#+end_src

** Build Keybinds

Build the global keybinds to be used in Emacs mode and available everywhere.

#+begin_src conf :noweb-ref keybinds-global-build :noweb yes
# Focus Workspaces
<<keybinds-global-focus-workspace>>

# Move Windows to Workspace
<<keybinds-global-move-workspace>>

# Toggle Container Layout
<<keybinds-global-layout>>

# Floating and Scratchpad Window Controls
<<keybinds-global-float>>

# Toggle Fullscreen
<<keybinds-global-fullscreen>>

# Volume Controls
<<keybinds-global-volume>>

# Emacs
<<keybinds-emacs>>

# Brave
<<keybinds-brave>>

# Kitty
<<keybinds-kitty>>

# Discord
<<keybinds-discord>>

# Spotify
<<keybinds-spotify>>

# Rofi
<<keybinds-rofi>>
#+end_src

** Settings

#+begin_src conf :noweb-ref settings :noweb yes
#===============================================================================#
# >>> Settings                                                                  #
#===============================================================================#

# Focus
<<focus>>

# Gaps
<<gaps>>

# Borders
<<borders>>

# Font
<<font>>

# Theme (Dracula)
<<theme>>

# Gaps
<<gaps>>

# Borders
<<borders>>

# Layout
<<layout>>
#+end_src
** Variables

#+begin_src conf :noweb-ref variables :noweb yes
#===============================================================================#
# >>> Variables                                                                 #
#===============================================================================#

# Modifiers
<<variables-modifiers>>

# Direction Key Aliases
<<variables-directions>>

# Configuration Aliases
set $exec exec --no-startup-id
set $move_to_workspace move container to workspace
set $exclude_emacs [con_id="__focused__" class="^(?!Emacs)"]
#+end_src

** Keybinds

#+begin_src conf :noweb-ref keybinds :noweb yes
#===============================================================================#
# >>> Keybinds                                                                  #
#===============================================================================#
# NOTE: The following keybinds are overridden to be different for specific
#       applications like when using Emacs. For more information see:
#       ./i3-emacs-mode.pl

# Focus Windows
<<keybinds-override-focus>>

# Move Windows
<<keybinds-override-move>>

# Split Windows in Direction
<<keybinds-override-split>>

# Kill Windows
<<keybinds-override-kill>>

# NOTE: The following keybinds are available everywhere regardless of mode.

<<keybinds-global-build>>
#+end_src

** Application Settings

#+begin_src conf :noweb-ref applications :noweb yes
#===============================================================================#
# >>> Application Settings                                                      #
#===============================================================================#

# Emacs
<<settings-emacs>>

# Brave
<<settings-brave>>

# Kitty
<<settings-kitty>>

# Discord
<<settings-discord>>

# Spotify
<<settings-spotify>>
#+end_src

** Startup

#+begin_src conf :noweb-ref startup :noweb yes :noweb-sep "\n\n"
#===============================================================================#
# >>> Startup                                                                   #
#===============================================================================#
# Note: Most startup related applications/services are executed by systemd.
#+end_src

** Modes

#+begin_src conf :noweb-ref modes :noweb yes
#===============================================================================#
# >>> Modes                                                                     #
#===============================================================================#

<<emacs-mode>>
#+end_src

*** Emacs

#+begin_src conf :noweb-ref emacs-mode :noweb yes
# Emacs
mode "Emacs" {
    # This mode is enabled by ./i3-emacs-mode.pl only when
    # Emacs is the focused application to enable window manager
    # keybinds to be used in Emacs.

    <<keybinds-global-build>>
}
#+end_src

* Behavior
** Focus

#+begin_src conf :noweb-ref focus
focus_follows_mouse no
focus_wrapping no
mouse_warping output
workspace_auto_back_and_forth no
#+end_src

** Gaps

#+begin_src conf :noweb-ref gaps
smart_gaps off
#+end_src

** Borders

#+begin_src conf :noweb-ref borders
hide_edge_borders smart
#+end_src

** Layout

#+begin_src conf :noweb-ref layout
default_orientation vertical
workspace_layout default
#+end_src

* Appearance
** Font

#+begin_src conf :noweb-ref font
font pango:Fira Code 11
#+end_src

** Theme

#+begin_src conf :noweb-ref theme
# class                 border  bground text    indicator child_border
client.focused          #6272A4 #6272A4 #F8F8F2 #6272A4   #6272A4
client.focused_inactive #44475A #44475A #F8F8F2 #44475A   #44475A
client.unfocused        #282A36 #282A36 #BFBFBF #282A36   #282A36
client.urgent           #44475A #FF5555 #F8F8F2 #FF5555   #FF5555
client.placeholder      #282A36 #282A36 #F8F8F2 #282A36   #282A36
client.background       #F8F8F2
#+end_src

** Gaps

#+begin_src conf :noweb-ref gaps
gaps outer 0px
gaps inner 0px
#+end_src

** Borders

#+begin_src conf :noweb-ref borders
default_border pixel 1
default_floating_border pixel 1
#+end_src

* Keybinds
** Modifiers

#+begin_src conf :noweb-ref variables-modifiers :comments org
set $mod Mod4
floating_modifier $mod
tiling_drag swap_modifier Shift
#+end_src

** Directional Keys

#+begin_src conf :noweb-ref variables-directions
set $left  h
set $down  j
set $up    k
set $right l
#+end_src

** Focus Windows

#+begin_src conf :noweb-ref keybinds-override-focus
bindsym $mod+$left  $exclude_emacs focus left
bindsym $mod+$down  $exclude_emacs focus down
bindsym $mod+$up    $exclude_emacs focus up
bindsym $mod+$right $exclude_emacs focus right
#+end_src

** Move Windows

#+begin_src conf :noweb-ref keybinds-override-move
bindsym $mod+Shift+$left  $exclude_emacs move left
bindsym $mod+Shift+$down  $exclude_emacs move down
bindsym $mod+Shift+$up    $exclude_emacs move up
bindsym $mod+Shift+$right $exclude_emacs move right
#+end_src

** Focus Workspace

#+begin_src conf :noweb-ref keybinds-global-focus-workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 0
#+end_src

** Move to Workspace

#+begin_src conf :noweb-ref keybinds-global-move-workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
#+end_src

** Split Windows

#+begin_src conf :noweb-ref keybinds-override-split
bindsym $mod+v split h
bindsym $mod+s split v
#+end_src

** Kill Windows

#+begin_src conf :noweb-ref keybinds-override-kill
bindsym $mod+Shift+q kill
#+end_src

** Toggle Container Layout

Disabled currently, as I need to experiment with this workflow more and consider its integration with other workflows. Example: i3fyra.

#+begin_src conf :noweb-ref keybinds-global-layout
bindsym $mod+grave layout toggle splith splitv tabbed
#+end_src

** Floating Window Controls

The following may also become disabled as their use is of limited value currently, although interesting.

#+begin_src conf :noweb-ref keybinds-global-float
bindsym $mod+Shift+space floating toggle
bindsym $mod+Control+Shift+space move scratchpad
#+end_src

#+begin_src conf :noweb-ref keybinds-global-float
bindsym $mod+space focus mode_toggle
#+end_src

#+begin_src conf :noweb-ref keybinds-global-float
bindsym $mod+semicolon [workspace="__focused__" floating] scratchpad show
#+end_src

#+begin_src conf :noweb-ref keybinds-global-float
bindsym $mod+apostrophe scratchpad show, move position center
#+end_src

** Toggle Fullscreen

#+begin_src conf :noweb-ref keybinds-global-fullscreen
bindsym $mod+F11 fullscreen toggle
#+end_src

** Volume Controls

The following audio control commands will need changed once I update my current Debian audio server.

#+begin_src conf :noweb-ref keybinds-global-volume
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +1%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -1%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle
#+end_src

* Programs
** Emacs

#+begin_src conf :noweb-ref settings-emacs
for_window [class="Emacs" tiling] $move_to_workspace 11
#+end_src

#+begin_src conf :noweb-ref keybinds-emacs
bindsym $mod+e [class="Emacs"] focus
bindsym $mod+Shift+e $exec "emacsclient -c -n --alternate-editor=''"
bindsym $mod+Control+Shift+e $move_to_workspace 11
#+end_src

** Brave

#+begin_src conf :noweb-ref settings-brave
for_window [class="(?i)brave-browser" tiling] $move_to_workspace 12
#+end_src

#+begin_src conf :noweb-ref keybinds-brave
bindsym $mod+f $exec i3-msg [workspace="__focused__" class="(?i)brave-browser"] focus || i3-msg [workspace="12" class="(?i)brave-browser"] focus
bindsym $mod+Shift+f $exec "flatpak run com.brave.Browser --password-store=basic"
bindsym $mod+Control+Shift+f $move_to_workspace 12
#+end_src

** Kitty

Set size, position, and behavior of drop-down Kitty window.

#+begin_src conf :noweb-ref settings-kitty
for_window [class="kitty-main-float"] floating toggle, resize set 50 ppt 50 ppt, move position center, move scratchpad, sticky enable
#+end_src

#+begin_src conf :exports none
# old code
#for_window [class="kitty-main-float" floating] move scratchpad
#+end_src

Create launching, focus, and moving binds to send dropdown Kitty window to the scratchpad workspace.

#+begin_src conf :noweb-ref keybinds-kitty
bindsym $mod+Return [class="kitty-main-float" workspace="__focused__"] focus, move scratchpad, scratchpad show; [class="kitty-main-float" floating] scratchpad show
bindsym $mod+Shift+Return exec --no-startup-id kitty --class 'kitty-main-float'
bindsym $mod+Control+Return [class="kitty-main-float" tiling] move scratchpad, scratchpad show; [class="kitty" floating] scratchpad show, floating toggle
#+end_src

#+begin_src conf :exports none
# old code
#bindsym $mod+Return [class="kitty-main-float" workspace="__focused__"] focus, move scratchpad; [class="kitty-main-float" floating] scratchpad show
#bindsym $mod+Control+Return [class="kitty-main-float" workspace="^(?!-1).*" floating] move scratchpad
#bindsym $mod+Return [class="kitty-main-float" workspace="^(?!-1)" floating] move scratchpad, [class="kitty-main-float" workspace="^(?!-1)" floating] scratchpad show
#+end_src

** Discord

Set workspace number and move new tiling windows there.

Otherwise, show the "startup" floating window on all workspaces.

#+begin_src conf :noweb-ref settings-discord
for_window [class="discord" floating] sticky enable
assign [class="discord"] workspace 13
#+end_src

#+begin_src conf :exports none
# old code
# for_window [class="discord"] floating toggle, resize set 50 ppt 60 ppt, move position center, move scratchpad, sticky enable
#+end_src

Create focusing and moving binds. Launching is done through Rofi.

Focus the Discord window regardless of it's location, or state. This may need some tweaking in the future. For now, I'm going to try to use non-popup (scratchpad) windows as much as possible. Otherwise complex rules will need to be added to enable the use of Discord as a floating, tiling, and scratchpad window.

#+begin_src conf :noweb-ref keybinds-discord
bindsym $mod+d [class="discord"] focus
bindsym $mod+Control+Shift+d $move_to_workspace 13
#+end_src

#+begin_src conf :exports none
# old code
# bindsym $mod+d [class="discord" floating] scratchpad show; [class="discord" tiling] focus
# bindsym $mod+Control+d [class="discord" tiling] move scratchpad, scratchpad show; [class="discord" floating] scratchpad show, floating toggle
#+end_src

** Spotify

#+begin_src conf :noweb-ref settings-spotify
assign [class="Spotify"] workspace 14
#+end_src

#+begin_src conf :noweb-ref keybinds-spotify
bindsym $mod+m [class="Spotify"] focus
bindsym $mod+Control+Shift+m $move_to_workspace 14
#+end_src

** Rofi

#+begin_src conf :noweb-ref keybinds-rofi
# App and menu launchers
bindsym $mod+o exec --no-startup-id rofi -show drun -show-icons
bindsym $mod+Escape exec --no-startup-id $HOME/.config/rofi/cogmenu/cogmenu.sh
#+end_src

** Nitrogen

#+begin_src conf :noweb-ref startup
exec --no-startup-id nitrogen --restore
#+end_src

* Tips
** Finding Information
*** Key Names

To find the name or =keysym= of the key to be used in this config use =xev= and press the key to get its name.

*** Window Information

To find window related information, you can use =xprop= and =xwininfo=.
** Terms
- mapping :: when a window is displayed.
- assign :: execute when window is mapped.
- for_window :: execute when window changes properties to match criteria.
- move :: move [container|window] to position or direction.
  - accepts direction + [px|ppt] amount which only applies to floating containers.
  - accepts moving to mouse position or screen position.
  
