#+html:<h1 align="center">Kitty Config</h1>

#+html:<p align="center"><a href="https://orgmode.org"><img src="https://img.shields.io/badge/Org-literate%20config-%2377aa99?style=flat-square&logo=org&logoColor=white"></a> <a href="https://www.gnu.org/software/emacs/"><img src="https://img.shields.io/badge/Made_with-Emacs-blueviolet.svg?style=flat-square&logo=GNU%20Emacs&logoColor=white" /></a></p>

#+html:<p align="center"><code><a href="https://sw.kovidgoyal.net/kitty/">Kitty</a></code> is an open source GPU accelerated terminal emulator with great speed, features, and customizability!</p>


[[https://sw.kovidgoyal.net/kitty/conf/][Documentation]]

* Font

#+begin_src conf :tangle kitty.conf
# font
font_family      JetBrains Mono
bold_font        auto
italic_font      auto
bold_italic_font auto

font_size 14.0
#+end_src

* Theme

I use the [[https://draculatheme.com/][Dracula]] theme everywhere I can!

#+begin_src conf :tangle kitty.conf
# dracula theme
foreground            #f8f8f2
background            #282a36
selection_foreground  #ffffff
selection_background  #44475a

url_color #8be9fd

# terminal colors
# black
color0  #21222c
color8  #6272a4

# red
color1  #ff5555
color9  #ff6e6e

# green
color2  #50fa7b
color10 #69ff94

# yellow
color3  #f1fa8c
color11 #ffffa5

# blue
color4  #bd93f9
color12 #d6acff

# magenta
color5  #ff79c6
color13 #ff92df

# cyan
color6  #8be9fd
color14 #a4ffff

# white
color7  #f8f8f2
color15 #ffffff

# Cursor colors
cursor            #f8f8f2
cursor_text_color background

#background_opacity 0.9

#: Choose the color of text under the cursor. If you want it rendered
#: with the background color of the cell underneath instead, use the
#: special keyword: background

# Tab bar colors
active_tab_foreground   #282a36
active_tab_background   #f8f8f2
inactive_tab_foreground #282a36
inactive_tab_background #6272a4

# Marks
mark1_foreground #282a36
mark1_background #ff5555

# Splits/Windows
active_border_color #f8f8f2
inactive_border_color #6272a4
#+end_src

* Keybinds

Each of the following keybinds have a Linux and macOS counterpart.

*** Disable All Defaults

I prefer to build my own workflow. To make this easier we clear all defaults, especially since I need to configure Linux and macOS compatibility.

#+begin_src conf :tangle kitty.conf
tab_bar_align center
clear_all_shortcuts yes
#+end_src

*** Clipboard Copy and Paste

#+begin_src conf :tangle kitty.conf
# copy
map kitty_mod+c copy_to_clipboard
map cmd+shift+c copy_to_clipboard
#+end_src

#+begin_src conf :tangle kitty.conf
# paste
map kitty_mod+v paste_from_clipboard
map cmd+shift+v paste_from_clipboard
#+end_src

*** Vim Based Movement
**** Scrolling
***** Up

#+begin_src conf :tangle kitty.conf
map kitty_mod+u scroll_page_up
map kitty_mod+d scroll_page_down
map cmd+shift+u scroll_page_up
map cmd+shift+d scroll_page_down
#+end_src

***** Down

#+begin_src conf :tangle kitty.conf
map kitty_mod+j scroll_line_down
map kitty_mod+k scroll_line_up
map cmd+shift+j scroll_line_down
map cmd+shift+k scroll_line_up
#+end_src

**** Tab Based Windowing
***** New Tab
#+begin_src conf :tangle kitty.conf
# new tab
map kitty_mod+enter new_tab
map cmd+shift+enter new_tab
#+end_src

***** Switch Tabs

#+begin_src conf :tangle kitty.conf
# tab navigation
map kitty_mod+h previous_tab
map kitty_mod+l next_tab
#+end_src

#+begin_src conf :tangle kitty.conf
map cmd+shift+h previous_tab
map cmd+shift+l next_tab
#+end_src

***** Move Tabs

#+begin_src conf :tangle kitty.conf
# move tabs
map kitty_mod+alt+h move_tab_backward
map kitty_mod+alt+l move_tab_forward
#+end_src

#+begin_src conf :tangle kitty.conf
map cmd+shift+ctrl+h move_tab_backward
map cmd+shift+ctrl+l move_tab_forward
#+end_src

***** Close Tabs (Windows)

#+begin_src conf :tangle kitty.conf
# close tabs
map kitty_mod+w close_window
map cmd+shift+w close_window
#+end_src

*** Change Font Size

#+begin_src conf :tangle kitty.conf
# increase
map kitty_mod+equal change_font_size all +2.0
map cmd+shift+equal change_font_size all +2.0

# decrease
map kitty_mod+minus change_font_size all -2.0
map cmd+shift+minus change_font_size all -2.0
#+end_src

* Mac Specific Settings

The following will be put into a file named after the OS type and included using this line:

#+begin_src conf :tangle kitty.conf
include ${KITTY_OS}.conf
#+end_src

This allows me to apply these fixes only on macOS.

** General Settings

#+begin_src conf :tangle macos.conf
hide_window_decorations titlebar-only
macos_hide_from_tasks no
macos_quit_when_last_window_closed yes
macos_option_as_alt no
#allow_remote_control yes
#+end_src

** Fix ZSH Line Editor Controls

There isn't a nice way for terminals to use the command key for the shell interrupt commands. They really only respond to control and alt. I'm using command as control. So, we must map the conversion ourselves. It's also done here instead of in skhd for a lot of reasons.

These binds are specific to the emacs mode. I may try the vim mode some day but have these in my muscle memory already.

*** "Control" Keybinds

#+begin_src conf :tangle macos.conf
map cmd+a send_text all \x01
map cmd+b send_text all \x02
map cmd+c send_text all \x03
map cmd+d send_text all \x04
map cmd+e send_text all \x05
map cmd+f send_text all \x06
map cmd+g send_text all \x07
map cmd+h send_text all \x08
map cmd+i send_text all \t
map cmd+j send_text all \n
map cmd+k send_text all \x0b
map cmd+l send_text all \x0c
map cmd+m send_text all \r
map cmd+n send_text all \x0e
map cmd+o send_text all \x0f
map cmd+p send_text all \x10
map cmd+q send_text all \x11
map cmd+r send_text all \x12
map cmd+s send_text all \x13
map cmd+t send_text all \x14
map cmd+u send_text all \x15
map cmd+v send_text all \x16
map cmd+w send_text all \x17
map cmd+y send_text all \x19
map cmd+z send_text all \x1a
#+end_src

*** "Alt" Keybinds

#+begin_src conf :tangle macos.conf
map ctrl+, send_text all \x1b,
map ctrl+- send_text all \x1b-
map ctrl+. send_text all \x1b.
map ctrl+/ send_text all \x1b/
map ctrl+0 send_text all \x1b0
map ctrl+1 send_text all \x1b1
map ctrl+2 send_text all \x1b2
map ctrl+3 send_text all \x1b3
map ctrl+4 send_text all \x1b4
map ctrl+5 send_text all \x1b5
map ctrl+6 send_text all \x1b6
map ctrl+7 send_text all \x1b7
map ctrl+8 send_text all \x1b8
map ctrl+9 send_text all \x1b9
map ctrl+< send_text all \x1b<
map ctrl+> send_text all \x1b>
map ctrl+? send_text all \x1b?
map ctrl+_ send_text all \x1b_
#+end_src

#+begin_src conf :tangle macos.conf
map ctrl+a send_text all \x1ba
map ctrl+b send_text all \x1bb
map ctrl+c send_text all \x1bc
map ctrl+d send_text all \x1bd
map ctrl+f send_text all \x1bf
map ctrl+g send_text all \x1bg
map ctrl+h send_text all \x1bh
map ctrl+l send_text all \x1bl
map ctrl+n send_text all \x1bn
map ctrl+p send_text all \x1bp
map ctrl+q send_text all \x1bq
map ctrl+s send_text all \x1bs
map ctrl+t send_text all \x1bt
map ctrl+u send_text all \x1bu
map ctrl+w send_text all \x1bw
map ctrl+x send_text all \x1bx
map ctrl+y send_text all \x1by
map ctrl+z send_text all \x1bz
map ctrl+backspace send_text all \x1b\x7f
#+end_src

*** "Control" and "Alt" Keybinds

#+begin_src conf :tangle macos.conf
map cmd+ctrl+d send_text all \x1b\x04
map cmd+ctrl+g send_text all \x1b\x07
map cmd+ctrl+h send_text all \x1b\x08
map cmd+ctrl+i send_text all \x1b\t
map cmd+ctrl+j send_text all \x1b\n
map cmd+ctrl+l send_text all \x1b\x0c
#+end_src
